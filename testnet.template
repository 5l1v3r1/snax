#!/bin/bash

# set up a wallet just for holding the key used during blockchain ignition

bioshost=$BIOS_HOSTNAME
if [ -z "$bioshost" ]; then
   bioshost=localhost
fi

biosport=$BIOS_HTTP_PORT
if [ -z "$biosport" ]; then
    biosport=9776
fi

wddir=snax-ignition-wd
wdaddr=localhost:8899
wdurl=http://$wdaddr
# Manual deployers, add a line below this block that looks like:
#    bioshost=$BIOS_HOSTNAME
#    biosport=$BIOS_HTTP_PORT
#    cnt_dir=$CONTRACT_DIR
#    sys=$SYS_CONTRACT
# where $BIOS_HOSTNAME is replaced by the hostname portion of the http-server-address configured
# for the snaxnode instance running to bios producer
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT envars

logfile=$wddir/bootlog.txt

if [ -e $wddir ]; then
    rm -rf $wddir
fi
mkdir $wddir

step=1
echo Initializing ignition sequence  at $(date) | tee $logfile

echo "http-server-address = $wdaddr" > $wddir/config.ini

programs/kxd/kxd --config-dir $wddir --data-dir $wddir 2> $wddir/wdlog.txt &
echo $$ > ignition_wallet.pid
echo kxd log in $wddir/wdlog.txt >> $logfile
sleep 1

ecmd () {
    echo ===== Start: $step ============ >> $logfile
    echo executing: clisnax --wallet-url $wdurl --url http://$bioshost:$biosport $* | tee -a $logfile
    echo ----------------------- >> $logfile
    programs/clisnax/clisnax  --wallet-url $wdurl --url http://$bioshost:$biosport $* >> $logfile 2>&1
    echo ==== End: $step ============== >> $logfile
    step=$(($step + 1))
}

wcmd () {
    ecmd wallet $*
}

cacmd () {
    programs/clisnax/clisnax  --wallet-url $wdurl --url http://$bioshost:$biosport system newaccount --transfer --stake-net "10000000.0000 SNAX" --stake-cpu "10000000.0000 SNAX"  --buy-ram "10000000.0000 SNAX" snax $* >> $logfile 2>&1
    ecmd system regproducer $1 $2
    ecmd system voteproducer prods $1 $1
}

sleep 2
ecmd get info

wcmd create --to-console -n ignition

# Manual deployers, add a line below this block that looks like:
#    wcmd import -n ignition --private-key $PRODKEY[0]
#    wcmd import -n ignition --private-key $PRODKEY[1]
#    ...
#    wcmd import -n ignition --private-key $PRODKEY[20]
# where $BIOSKEY is replaced by the private key for the bios node
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT prodkeys

ecmd set contract snax contracts/snax.bios snax.bios.wasm snax.bios.abi

# Create required system accounts
ecmd create key --to-console
pubsyskey=`grep "^Public key:" $logfile | tail -1 | sed "s/^Public key://"`
prisyskey=`grep "^Private key:" $logfile | tail -1 | sed "s/^Private key://"`
echo snax.* keys: $prisyskey $pubsyskey >> $logfile
wcmd import -n ignition --private-key $prisyskey
ecmd create account snax snax.bpay $pubsyskey $pubsyskey
ecmd create account snax snax.msig $pubsyskey $pubsyskey
ecmd create account snax snax.util $pubsyskey $pubsyskey
ecmd create account snax snax.names $pubsyskey $pubsyskey
ecmd create account snax snax.ram $pubsyskey $pubsyskey
ecmd create account snax snax.ramfee $pubsyskey $pubsyskey
ecmd create account snax snax.stake $pubsyskey $pubsyskey
ecmd create account snax snax.token $pubsyskey $pubsyskey
ecmd create account snax snax.vpay $pubsyskey $pubsyskey
ecmd create account snax snax.transf $pubsyskey $pubsyskey
ecmd create account snax snax.team $pubsyskey $pubsyskey
ecmd create account snax snax.airdrop $pubsyskey $pubsyskey
ecmd create account snax snax.creator $pubsyskey $pubsyskey
ecmd create account snax snax.sudo $pubsyskey $pubsyskey

ecmd set contract snax.token contracts/snax.token snax.token.wasm snax.token.abi
ecmd set contract snax.msig contracts/snax.msig snax.msig.wasm snax.msig.abi
ecmd set contract snax.sudo contracts/snax.sudo snax.sudo.wasm snax.sudo.abi

echo ===== Start: $step ============ >> $logfile
echo executing: clisnax --wallet-url $wdurl --url http://$bioshost:$biosport push action snax.token create '[ "snax", "10000000000.0000 SNAX" ]' -p snax.token | tee -a $logfile
echo executing: clisnax --wallet-url $wdurl --url http://$bioshost:$biosport push action snax.token issue '[ "snax", "1000000000.0000 SNAX", "memo" ]' -p snax | tee -a $logfile
echo ----------------------- >> $logfile
programs/clisnax/clisnax --wallet-url $wdurl --url http://$bioshost:$biosport push action snax.token create '[ "snax", "10000000000.0000 SNAX" ]' -p snax.token >> $logfile 2>&1
programs/clisnax/clisnax --wallet-url $wdurl --url http://$bioshost:$biosport push action snax.token issue '[ "snax", "1000000000.0000 SNAX", "memo" ]' -p snax >> $logfile 2>&1
echo ==== End: $step ============== >> $logfile
step=$(($step + 1))

ecmd set contract snax contracts/snax.system snax.system.wasm snax.system.abi

# Manual deployers, add a series of lines below this block that looks like:
#    cacmd $PRODNAME[0] $OWNERKEY[0] $ACTIVEKEY[0]
#    cacmd $PRODNAME[1] $OWNERKEY[1] $ACTiVEKEY[1]
#    ...
#    cacmd $PRODNAME[20] $OWNERKEY[20] $ACTIVEKEY[20]
# where $PRODNAME is the producer account name and $OWNERKEY and $ACTIVEKEY are both the producer's
# public key
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT cacmd

pkill -15 kxd
