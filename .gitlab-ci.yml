variables:
  HOME_DIR: /home/eos
  NODSNAX: http://localhost:8888
  PATH_TO_MINTS: $HOME_DIR/$CI_PROJECT_DIR
  JEST_TESTS: $HOME_DIR/$CI_PROJECT_DIR/jest_tests
  SNAX_HOME: $HOME_DIR/$CI_PROJECT_DIR/build/
  WALLET_DIR: $HOME_DIR/snax-wallet
  MONGOD_CONF: $HOME_DIR/opt/mongodb/mongod.conf
  DOCKER_DRIVER: overlay2
  USERNAME: SnaxOne
  ORG: SnaxFoundation
  REGISTRY_PUB: snaxfoundation

stages:
- cleanup
- build
- test
- build-docker
- deploy
- publish

cleanup:
  stage: cleanup
  script:
  - sudo rm -rf /tmp/*-*-*-*
  - sudo rm -rf $WALLET_DIR
  - docker stop mongo || true
  except:
    changes:
      - "*.md"
  tags:
    - build4

build:
  stage: build
  script:
  - git submodule update --init --recursive
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - ./snax_build.sh
  - rm -rf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz && tar -czf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz build
  - sudo ./snax_install.sh
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - build/bin/
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-build/
    changes:
      - "*.md"
  tags:
    - build4

build:tag:
  stage: build
  script:
    - git submodule update --init --recursive
    - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
    - ./snax_build.sh
    - rm -rf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz && tar -czf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz build
    - sudo ./snax_install.sh
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
    - build/bin/
  only:
  - tags
  tags:
    - build4

build:tag:macos:
  stage: build
  script:
    - git submodule update --init --recursive
    - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
    - ./snax_build.sh
    - rm -rf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz && tar -czf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz build
    - mv build/bin build/bin-mac
  artifacts:
    name: "macos-$CI_COMMIT_REF_NAME"
    paths:
    - build/bin-mac
  only:
  - tags
  tags:
  - macos

build:tag:elastic:
  stage: build
  script:
    - git submodule update --init --recursive
    - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
    - git clone https://github.com/SnaxFoundation/elasticsearch_plugin.git plugins/elasticsearch_plugin
    - cd plugins/elasticsearch_plugin/
    - git checkout release/1.5.x
    - git submodule update --init --recursive
    - cd ../../
    - sed -i '/add_subdirectory(login_plugin)/a add_subdirectory(elasticsearch_plugin)' plugins/CMakeLists.txt
    - sed -i '/PRIVATE -Wl,${whole_archive_flag} history_plugin/a PRIVATE -Wl,${whole_archive_flag} elasticsearch_plugin       -Wl,${no_whole_archive_flag}' programs/snaxnode/CMakeLists.txt
    - ./snax_build.sh
    - rm -rf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz && tar -czf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz build
    - sudo ./snax_install.sh
  artifacts:
    name: "elastic-$CI_COMMIT_REF_NAME"
    paths:
    - build/bin-elastic
  only:
  - tags
  tags:
  - build4

test:jest:
  stage: test
  script:
  - rm -rf $WALLET_DIR
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - cd $JEST_TESTS && yarn install && yarn test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-test/
    changes:
      - "*.md"
  tags:
    - build4


test:core:
  stage: test
  script:
  - docker stop mongo || true && docker run --rm -d --name mongo -p 27017:27017 mvertes/alpine-mongo
  - rm -rf $WALLET_DIR
  - export PATH=$HOME_DIR/opt/mongodb/bin:$PATH
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - cd $SNAX_HOME && ctest --output-on-failure
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-test/
    changes:
      - contracts/platform/*
      - jest_tests/*
      - "*.md"
  tags:
    - build4

build:docker:
  stage: build-docker
  script:
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - cp -r /usr/local/lib .
  - cp -r /usr/local/snax/bin .
  - echo "$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA" > snax-version
  - docker build --rm -t $REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME .
  - docker push $REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
  - docker rmi $REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
  except:
    changes:
      - "*.md"
  tags:
      - build4

build:docker:tag:
  stage: build-docker
  script:
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - cp -r /usr/local/lib .
  - cp -r /usr/local/snax/bin .
  - echo "$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA" > snax-version
  - docker build --rm -t $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  - docker rmi $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  only:
  - tags
  tags:
    - build4

build:docker:tag:elastic:
  stage: build-docker
  script:
  - if [ -f /tmp/build-$CI_COMMIT_REF_NAME.tar.gz ]; then tar -xf /tmp/build-$CI_COMMIT_REF_NAME.tar.gz; fi
  - cp -r /usr/local/lib .
  - cp -r /usr/local/snax/bin .
  - echo "$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA" > snax-version
  - docker build --rm -t $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG-elastic .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG-elastic
  - docker rmi $REGISTRY_PUB/$CI_PROJECT_NAME:$CI_COMMIT_TAG-elastic
  only:
  - tags
  tags:
    - build4

publish:
  stage: publish
  image: ${REGISTRY}/ok.sh:master
  script:
  - cd build/bin && tar cvzf bin-linux.tar.gz *
  - cd ../bin-mac && tar cvzf bin-macos.tar.gz *
  - ok.sh create_release $ORG $CI_PROJECT_NAME $CI_COMMIT_TAG prerelease=true
  - docker-entrypoint.sh $ORG $CI_PROJECT_NAME $CI_COMMIT_TAG bin-linux.tar.gz ../bin/bin-linux.tar.gz
  - docker-entrypoint.sh $ORG $CI_PROJECT_NAME $CI_COMMIT_TAG bin-macos.tar.gz ./bin-macos.tar.gz
  dependencies:
    - build:tag
    - build:tag:macos
  only:
    - tags
  tags:
    - docker

trigger_build:
  stage: deploy
  image: quay.io/collectai/alpine-curl
  variables:
    GIT_STRATEGY: none
  script:
    - "curl -X POST -F token=$BUILD_TOKEN -F ref=dev https://gitlab.snax.one/api/v4/projects/34/trigger/pipeline"
  only:
    - dev
  tags:
    - docker
